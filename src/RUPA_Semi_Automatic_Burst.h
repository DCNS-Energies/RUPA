#ifndef __RUPA_Semi_Automatic_Burst__
#define __RUPA_Semi_Automatic_Burst__

/**
@file
Subclass of Semi_Automatic_Burst, which is generated by wxFormBuilder.
*/

#include "RUPAUI.h"
#include "RUPA_Utility.h"
#include "watchdog_pi.h"
//#include <windows.h>
//#include "WinTypes.h"
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <unistd.h>
#include <ftd2xx.h>
//#include "RUPA_RS232.h"
//// end generated include
#include "RUPA_Manage_Structure.h"

class RUPA_Manage_Structure;

/** Implementing Semi_Automatic_Burst */
class RUPA_Semi_Automatic_Burst : public Semi_Automatic_Burst
{
    protected:
	// Handlers for Semi_Automatic_Burst events.
	void On_Range_Button( wxCommandEvent& event );
	//void On_Next_Transponder_Button( wxCommandEvent& event );
	//void On_Previous_Transponder_Button( wxCommandEvent& event );
	
	void On_Previous_Transponder_Button( wxCommandEvent& event );
	void On_Next_Transponder_Button( wxCommandEvent& event );
	void On_Battery_Check_Button( wxCommandEvent& event );
	void On_Release_Nut_Button( wxCommandEvent& event );
	void On_Finish_Burst_Button( wxCommandEvent& event );
	void Prepare_SQL();
	wxWindow* parent;

	sql::Driver *driver;
	sql::Connection *con;
	sql::Statement *stmt;
	sql::PreparedStatement *prep_stmt;
	sql::ResultSet *res;
	RUPA_Manage_Structure *l_Manage_Structure;//local variable to interact with window wich called that one
	long int Id_Calling_Structure;
	long int Burst_Id;
	int messages_sent_count;
	int messages_received_count;
	std::vector<std::string> Transponders;
	int Transponders_Count;//total number of Transponders
	int Transponder_Number;//Actual Transponder

	std::string Current_Transponder;
	//std::string RUPA_RS232(unsigned char msg[]);
	
    public:
	/** Constructor */
	RUPA_Semi_Automatic_Burst( wxWindow* parent, RUPA_Manage_Structure * MS, bool Recovery );
    //// end generated class members
    private:

	//watchdog_pi &m_watchdog_pi;




};

#endif // __RUPA_Semi_Automatic_Burst__
